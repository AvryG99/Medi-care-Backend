name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger workflow on push to the 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # Use a GitHub runner for CI

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'  # Set the Python version you're using

    - name: Install dependencies
      run: |
        # Not necessary here, since dependencies should be installed on the server
        echo "Dependencies will be installed on the server during deployment"

    - name: Deploy to server
      env:
        DEPLOY_SERVER: ${{ secrets.DEPLOY_SERVER }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
      run: |
        # SSH into the server and pull the latest code from GitHub
        ssh -i <(echo "$DEPLOY_SSH_KEY") $DEPLOY_USER@$DEPLOY_SERVER << 'EOF'
          cd /home/averyg99/web/Medi-care-Backend
          git pull origin main  # Pull latest code

          # Activate the existing virtual environment
          source /home/averyg99/web/Medi-care-Backend/env/bin/activate

          # Install dependencies on the server
          pip install -r requirements.txt

          # Restart the app service (Flask)
          systemctl restart flask-server  # Restart your app service
        EOF
